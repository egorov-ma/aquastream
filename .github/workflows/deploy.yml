---
name: Deploy
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  POSTGRES_PASSWORD: ci_test_password_123
  ELASTIC_PASSWORD: ci_test_elastic_123
  KIBANA_PASSWORD: ci_test_kibana_123
  GRAFANA_ADMIN_PASSWORD: ci_test_grafana_123

jobs:
  validate-infrastructure:
    name: Validate Infrastructure
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install validation tools
        shell: bash
        run: |
          set -o pipefail
          # Install yq for YAML validation
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          # Install shellcheck for shell scripts
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Create test .env file
        run: envsubst < infra/docker/compose/.env.ci > infra/docker/compose/.env

      - name: Validate Docker Compose
        run: docker compose -f infra/docker/compose/docker-compose.yml config > /dev/null

      - name: Check for latest tags
        shell: bash
        run: |
          set -o pipefail
          if grep -q ":latest" infra/docker/compose/docker-compose.yml; then
            echo "Found :latest tags in docker-compose.yml!"
            exit 1
          fi

      - name: Validate shell scripts
        run: find . -name "*.sh" -not -path "*/node_modules/*" -exec shellcheck -x {} +

      - name: Run infrastructure validation
        shell: bash
        run: |
          set -o pipefail
          chmod +x infra/scripts/validate-infrastructure.sh
          ./infra/scripts/validate-infrastructure.sh --quick

  deploy:
    needs: validate-infrastructure
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create production .env file
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD || 'changeme123!' }}
          ELASTIC_PASSWORD: ${{ secrets.ELASTIC_PASSWORD || 'changeMe123!' }}
          KIBANA_PASSWORD: ${{ secrets.KIBANA_PASSWORD || 'changeme123!' }}
          GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD || 'admin' }}
        run: envsubst < infra/docker/compose/.env.ci > infra/docker/compose/.env

      - name: Build Docker images
        run: docker compose -f infra/docker/compose/docker-compose.yml build

      - name: Deploy to ${{ github.event.inputs.environment }}
        run: echo "Deploying to ${{ github.event.inputs.environment }} environment"
