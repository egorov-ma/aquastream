---
name: Deploy
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  POSTGRES_PASSWORD: ci_test_password_123
  ELASTIC_PASSWORD: ci_test_elastic_123
  KIBANA_PASSWORD: ci_test_kibana_123
  GRAFANA_ADMIN_PASSWORD: ci_test_grafana_123

jobs:
  validate-infrastructure:
    name: Validate Infrastructure
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create test .env file
        run: envsubst < infra/docker/compose/.env.ci > infra/docker/compose/.env

      - name: Validate Docker Compose
        run: docker compose -f infra/docker/compose/docker-compose.yml --env-file infra/docker/compose/.env config --quiet

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@v2

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile.*
          recursive: true

      - name: Validate YAML files
        uses: mikefarah/yq@v4
        with:
          cmd: |
            find infra \( -name '*.yml' -o -name '*.yaml' \) -exec yq eval '.' {} + > /dev/null

  deploy:
    needs: validate-infrastructure
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create production .env file
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD || 'changeme123!' }}
          ELASTIC_PASSWORD: ${{ secrets.ELASTIC_PASSWORD || 'changeMe123!' }}
          KIBANA_PASSWORD: ${{ secrets.KIBANA_PASSWORD || 'changeme123!' }}
          GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD || 'admin' }}
        run: envsubst < infra/docker/compose/.env.ci > infra/docker/compose/.env

      - name: Build Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/docker/compose/docker-compose.yml
          load: true
          cache-from: type=gha,scope=deploy
          cache-to: type=gha,mode=max,scope=deploy

      - name: Deploy to ${{ github.event.inputs.environment }}
        run: echo "Deploying to ${{ github.event.inputs.environment }} environment"
