---
name: Backend CI
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
    paths:
      - 'backend-*/**'
      - 'backend-common/**'
      - 'build.gradle'
      - 'settings.gradle'
      - 'gradle/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend-*/**'
      - 'backend-common/**'
      - 'build.gradle'
      - 'settings.gradle'
      - 'gradle/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  changes:
    name: Detect build file changes
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    outputs:
      lock: ${{ steps.filter.outputs.lock }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
        with:
          fetch-depth: 0
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            lock:
              - 'build.gradle'
              - 'settings.gradle'
              - 'gradle/**'
              - '**/build.gradle'
              - 'version.properties'

  lock-check:
    name: Lock Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [ changes ]
    if: needs.changes.outputs.lock == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up JDK 21
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ed408507eac070d1f99cc633dbcf757c94c7933a # v3

      - name: Generate locks for all projects (no build)
        shell: bash
        run: |
          set -euo pipefail
          MODULES=$(sed -n "s/^include[[:space:]]*'\([^']\+\)'.*/\1/p" settings.gradle)
          TASKS=":dependencies"
          for m in $MODULES; do TASKS="$TASKS :$m:dependencies"; done
          echo "[lock-check] Running: ./gradlew --write-locks $TASKS"
          ./gradlew --no-daemon --write-locks $TASKS

      - name: Verify lockfiles unchanged
        shell: bash
        run: |
          set -euo pipefail
          CHANGES=$(git status --porcelain | grep -E "gradle\.lockfile" || true)
          if [[ -n "$CHANGES" ]]; then
            echo "::error::Dependency lockfiles out of sync. Run 'make deps-lock' (or './gradlew --write-locks') and commit changes." 
            echo "$CHANGES"
            exit 1
          fi

  build:
    name: Backend Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [ changes, lock-check ]
    if: ${{ always() && (needs.lock-check.result == 'success' || needs.lock-check.result == 'skipped') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up JDK 21
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ed408507eac070d1f99cc633dbcf757c94c7933a # v3

      - name: Enable problem matcher (warnings/errors)
        run: echo "::add-matcher::.github/matchers/generic.json"

      - name: Mark build start
        run: echo "BUILD_START=$(date +%s)" >> "$GITHUB_ENV"

      - name: Build JARs
        run: ./gradlew build

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: backend-build
          path: "**/build/libs/*.jar"

      - name: Summary
        shell: bash
        run: |
          echo "### Backend CI — результат" >> "$GITHUB_STEP_SUMMARY"
          echo "- Сборка Gradle: успешно" >> "$GITHUB_STEP_SUMMARY"
          if [[ -n "${BUILD_START:-}" ]]; then
            NOW=$(date +%s); DUR=$((NOW-BUILD_START)); printf -- "- Время сборки: %02d:%02d\n" $((DUR/60)) $((DUR%60)) >> "$GITHUB_STEP_SUMMARY"; fi
          COUNT=$(find . -type f -path "*/build/libs/*.jar" | wc -l | tr -d ' ')
          echo "- Количество JAR: $COUNT" >> "$GITHUB_STEP_SUMMARY"
          echo "- JAR файлы (по размеру):" >> "$GITHUB_STEP_SUMMARY"
          find . -type f -path "*/build/libs/*.jar" -printf '%s\t%p\n' | sort -nr | awk -F '\t' '{printf "  - %s (%0.1f MiB)\n", $2, $1/1024/1024}' >> "$GITHUB_STEP_SUMMARY"
          echo "- Загружен артефакт: backend-build (JAR)" >> "$GITHUB_STEP_SUMMARY"
