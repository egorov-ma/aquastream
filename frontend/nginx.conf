# Параметры пользователя и процессов
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on; # Принимать множественные соединения за раз
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    tcp_nopush on; # Оптимизация TCP для высоконагруженных сценариев
    tcp_nodelay on; # Уменьшение задержки для интерактивных соединений
    keepalive_timeout 65;
    reset_timedout_connection on; # Освобождение ресурсов для тайм-аутов
    
    # Улучшенные настройки сжатия (gzip + brotli)
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_vary on;
    gzip_proxied any;
    gzip_http_version 1.1; # Минимальная версия HTTP для сжатия
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/wasm image/svg+xml;
    gzip_disable "msie6"; # Отключение для старых версий IE
    
    # Brotli отключён — используем только gzip.
    
    # Кэширование статических ресурсов в зависимости от типа
    map $request_uri $cache_control {
        default                         "no-cache, no-store, must-revalidate";
        ~*\.(css|js)$                   "public, max-age=31536000, immutable";
        ~*\.(jpg|jpeg|png|gif|ico|svg)$ "public, max-age=31536000, immutable";
        ~*\.(woff|woff2|ttf|eot)$       "public, max-age=31536000, immutable";
    }
    
    # Настраиваем блокировку нежелательных ботов и атак
    map $http_user_agent $limit_bots {
        default                        0;
        ~*(googlebot|bingbot|yandex)   0; # Разрешаем поисковые боты
        ~*(crawler|spider)             1; # Блокируем остальных
        ~*(WinHttp|WebZIP|Teleport)    1; # Блокируем известные инструменты скачивания
    }

    # Лимиты для защиты от DDoS
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;
    
    server {
        listen 80;
        listen [::]:80;
        
        # HTTP/2 и SSL настройки
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_dhparam /etc/nginx/ssl/dhparam.pem; # Файл параметров Diffie-Hellman
        
        # Используем встроенный DNS Docker для резолвинга service-name (user-service, api-gateway и т.д.)
        resolver 127.0.0.11 valid=30s;
        resolver_timeout 5s;
        
        # Оптимизированные настройки SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Добавляем http2_push_preload
        http2_push_preload on;
        
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # Защита от плохих ботов
        if ($limit_bots = 1) {
            return 403;
        }
        
        # Применение ограничений для всех запросов
        limit_conn conn_limit_per_ip 10; # Максимум 10 соединений на IP
        limit_req zone=req_limit_per_ip burst=20 nodelay; # Лимитирование запросов с бурстом
        
        # Улучшенные заголовки безопасности
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always; # Добавлена защита от XSS
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;
        
        # Адаптированная CSP-политика для поддержки фреймворков
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' http: https:; frame-ancestors 'self'; form-action 'self'; base-uri 'self'; object-src 'none'" always;
        
        # Настройки буферизации для всех запросов с увеличенным client_max_body_size
        client_body_buffer_size 128K;
        client_header_buffer_size 1k;
        client_max_body_size 20m; # Увеличено для загрузки больших файлов
        large_client_header_buffers 4 16k;
        
        # Кеширование для assets директории (собранные статические файлы Vite)
        location /assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable" always;
            add_header Vary Accept-Encoding always;
            access_log off;
            
            # Оптимизация для статических файлов
            tcp_nodelay off;
            open_file_cache max=1000 inactive=30s;
            open_file_cache_valid 60s;
            open_file_cache_min_uses 2;
            open_file_cache_errors on;
            
            # Дополнительно: предзагрузка важных ресурсов с HTTP/2 Server Push
            http2_push /assets/main.css;
            http2_push /assets/main.js;
        }

        # Кеширование для статических директорий img и doc
        location ~ ^/(img|doc)/ {
            expires 1y;
            add_header Cache-Control "public, immutable" always;
            add_header Vary Accept-Encoding always;
            access_log off;
            
            # Оптимизация для статических файлов
            tcp_nodelay off;
            open_file_cache max=1000 inactive=30s;
            open_file_cache_valid 60s;
            open_file_cache_min_uses 2;
            open_file_cache_errors on;
        }
        
        # Другие статические файлы с кэшированием по типам
        location ~* \.(html|css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            add_header Cache-Control $cache_control;
            add_header Vary Accept-Encoding; # Добавление заголовка Vary для корректной работы кэширования с различными методами сжатия
            etag on;
            if_modified_since exact;
            try_files $uri =404;
        }
        
        # Настройка для SPA (Single Page Application)
        location / {
            try_files $uri $uri/ /index.html;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
            add_header Pragma "no-cache" always;
        }

        # API проксирование на бэкенд через API Gateway
        location /api/ {
            # Проксирование запросов к API Gateway (правильная архитектура микросервисов)
            set $api_url "http://api-gateway:8080/api/";
            proxy_pass $api_url;
            
            # Настройки прокси
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Настройки буферизации для прокси
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            proxy_temp_file_write_size 256k;
            
            # Таймауты для прокси
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Отключаем кэширование для API запросов
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
            add_header Pragma "no-cache" always;
            
            # Настройки для загрузки файлов через API
            client_max_body_size 50m; # Увеличиваем для API загрузок
            proxy_request_buffering off; # Отключаем буферизацию запросов для загрузки больших файлов
        }
        
        # Специальный блок для обработки WebSocket соединений
        location /ws/ {
            proxy_pass http://api-gateway:8080/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Увеличенные таймауты для долгоживущих соединений
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Мониторинг статуса Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;  # Разрешаем доступ только с локального хоста
            deny all;         # Запрещаем доступ всем остальным
        }
        
        # Блокируем доступ к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Обработка ошибок
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
} 