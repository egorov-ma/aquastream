import type { Meta, StoryObj } from '@storybook/react';
import { Input } from './Input'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
import { User } from 'lucide-react'; // –ü—Ä–∏–º–µ—Ä –∏–∫–æ–Ω–∫–∏

const meta = {
  title: 'UI/Input',
  component: Input,
  parameters: {
    layout: 'centered',
  },
  tags: ['autodocs'],
  argTypes: {
    label: {
      control: 'text',
      description: '–õ–µ–π–±–ª –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    placeholder: {
      control: 'text',
      description: 'Placeholder –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    variant: {
      control: { type: 'select' },
      options: ['outlined', 'filled', 'underlined', 'floating'],
      description: '–í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è',
    },
    color: {
      control: { type: 'select' },
      options: ['primary', 'secondary', 'accent', 'error', 'warning', 'success', 'info'],
      description: '–¶–≤–µ—Ç –∞–∫—Ü–µ–Ω—Ç–∞',
    },
    size: {
      control: { type: 'select' },
      options: ['sm', 'md', 'lg'],
      description: '–†–∞–∑–º–µ—Ä –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    fullWidth: {
      control: 'boolean',
      description: '–†–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É',
    },
    disabled: {
      control: 'boolean',
      description: '–û—Ç–∫–ª—é—á–µ–Ω–æ –ª–∏ –ø–æ–ª–µ',
    },
    error: {
      control: 'text',
      description: '–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å, –ø–æ–ª–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—à–∏–±–æ—á–Ω—ã–º)',
    },
    helperText: {
      control: 'text',
      description: '–¢–µ–∫—Å—Ç-–ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–¥ –ø–æ–ª–µ–º',
    },
    leftIcon: {
      control: false,
      description: '–ò–∫–æ–Ω–∫–∞ —Å–ª–µ–≤–∞ (ReactNode)',
    },
    rightIcon: {
      control: false,
      description: '–ò–∫–æ–Ω–∫–∞ —Å–ø—Ä–∞–≤–∞ (ReactNode)',
    },
    // –î—Ä—É–≥–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ Input –∞—Ç—Ä–∏–±—É—Ç—ã
    type: {
      control: 'text',
      description: 'HTML Input type (text, password, email, etc.)',
    },
    value: {
      control: 'text',
      description: '–ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ (–¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞)',
    },
    onChange: {
      action: 'changed',
      description: '–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è',
    },
  },
  args: {
    label: '–ü–æ–ª–µ –≤–≤–æ–¥–∞',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...',
    variant: 'outlined',
    color: 'primary',
    size: 'md',
    fullWidth: false,
    disabled: false,
    error: '',
    helperText: '–≠—Ç–æ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç',
    type: 'text',
  },
} satisfies Meta<typeof Input>;

export default meta;
type Story = StoryObj<typeof meta>;

export const Default: Story = {};

export const WithoutLabel: Story = {
  args: {
    label: '',
    placeholder: '–ü–æ–ª–µ –±–µ–∑ –ª–µ–π–±–ª–∞',
  },
};

export const WithError: Story = {
  args: {
    label: '–ü–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π',
    error: '–≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ',
    helperText: '', // –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç helperText
  },
};

export const Disabled: Story = {
  args: {
    label: '–û—Ç–∫–ª—é—á–µ–Ω–Ω–æ–µ –ø–æ–ª–µ',
    disabled: true,
    value: '–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å',
  },
};

export const SmallSize: Story = {
  args: {
    label: '–ú–∞–ª–µ–Ω—å–∫–æ–µ –ø–æ–ª–µ',
    size: 'sm',
    placeholder: 'Small',
  },
};

export const LargeSize: Story = {
  args: {
    label: '–ë–æ–ª—å—à–æ–µ –ø–æ–ª–µ',
    size: 'lg',
    placeholder: 'Large',
  },
};

export const WithLeftIcon: Story = {
  args: {
    label: '–ü–æ–ª–µ —Å –∏–∫–æ–Ω–∫–æ–π —Å–ª–µ–≤–∞',
    leftIcon: <User size={18} />,
  },
};

export const WithRightIcon: Story = {
  args: {
    label: '–ü–æ–ª–µ —Å –∏–∫–æ–Ω–∫–æ–π —Å–ø—Ä–∞–≤–∞',
    type: 'password',
    rightIcon: <span>üëÅÔ∏è</span>,
  },
};

export const WithBothIcons: Story = {
  args: {
    label: '–ü–æ–ª–µ —Å –¥–≤—É–º—è –∏–∫–æ–Ω–∫–∞–º–∏',
    leftIcon: <User size={18} />,
    rightIcon: <span>üîí</span>,
  },
};

export const FullWidth: Story = {
  args: {
    label: '–ü–æ–ª–µ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É',
    fullWidth: true,
  },
};

export const Filled: Story = {
  args: {
    label: '–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –ø–æ–ª–µ',
    variant: 'filled',
  },
};

export const Underlined: Story = {
  args: {
    label: '–ü–æ–¥—á–µ—Ä–∫–Ω—É—Ç–æ–µ –ø–æ–ª–µ',
    variant: 'underlined',
    placeholder: '–¢–æ–ª—å–∫–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ',
  },
};

export const FloatingLabel: Story = {
  args: {
    label: '–ü–ª–∞–≤–∞—é—â–∞—è –º–µ—Ç–∫–∞',
    variant: 'floating',
    placeholder: ' ',
  },
};
