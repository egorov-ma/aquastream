import type { Meta, StoryObj } from '@storybook/react';
import { useState } from 'react';

import TextField from './TextField';

const meta = {
  title: 'UI/TextField',
  component: TextField,
  parameters: {
    layout: 'centered',
  },
  tags: ['autodocs'],
  argTypes: {
    variant: {
      control: { type: 'select' },
      options: ['standard', 'outlined', 'filled', 'floating'],
      description: '–í–∞—Ä–∏–∞–Ω—Ç —Å—Ç–∏–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    size: {
      control: { type: 'select' },
      options: ['sm', 'md', 'lg'],
      description: '–†–∞–∑–º–µ—Ä –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    label: {
      control: 'text',
      description: '–ú–µ—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    placeholder: {
      control: 'text',
      description: '–ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä',
    },
    helperText: {
      control: 'text',
      description: '–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–¥ –ø–æ–ª–µ–º',
    },
    error: {
      control: 'boolean',
      description: '–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏',
    },
    errorText: {
      control: 'text',
      description: '–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏',
    },
    fullWidth: {
      control: 'boolean',
      description: '–†–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å –ø–æ–ª–µ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞',
    },
    disabled: {
      control: 'boolean',
      description: '–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    startIcon: {
      control: { type: 'text' },
      description: '–ò–∫–æ–Ω–∫–∞ –≤ –Ω–∞—á–∞–ª–µ –ø–æ–ª—è (React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç)',
    },
    endIcon: {
      control: { type: 'text' },
      description: '–ò–∫–æ–Ω–∫–∞ –≤ –∫–æ–Ω—Ü–µ –ø–æ–ª—è (React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç)',
    },
    type: {
      control: 'select',
      options: ['text', 'password', 'email', 'number', 'tel', 'url'],
      description: '–¢–∏–ø –ø–æ–ª—è –≤–≤–æ–¥–∞',
    },
    required: {
      control: 'boolean',
      description: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ',
    },
  },
} satisfies Meta<typeof TextField>;

export default meta;
type Story = StoryObj<typeof meta>;

// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
type TextFieldProps = React.ComponentProps<typeof TextField>;

const ControlledTextField = (args: TextFieldProps) => {
  const [value, setValue] = useState(args.value || '');
  return <TextField {...args} value={value} onChange={(e) => setValue(e.target.value)} />;
};

// –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
export const Standard: Story = {
  args: {
    variant: 'outlined',
    label: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∏–Ω–ø—É—Ç',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Outlined: Story = {
  args: {
    variant: 'outlined',
    label: '–û–±–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª–µ',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Filled: Story = {
  args: {
    variant: 'filled',
    label: '–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –ø–æ–ª–µ',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Floating: Story = {
  args: {
    variant: 'floating',
    label: '–ü–ª–∞–≤–∞—é—â–∞—è –º–µ—Ç–∫–∞',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
  },
  render: (args) => <ControlledTextField {...args} />,
};

// –†–∞–∑–º–µ—Ä—ã –ø–æ–ª–µ–π
export const Small: Story = {
  args: {
    size: 'sm',
    label: '–ú–∞–ª–µ–Ω—å–∫–æ–µ –ø–æ–ª–µ',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Medium: Story = {
  args: {
    size: 'md',
    label: '–°—Ä–µ–¥–Ω–µ–µ –ø–æ–ª–µ',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Large: Story = {
  args: {
    size: 'lg',
    label: '–ë–æ–ª—å—à–æ–µ –ø–æ–ª–µ',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
  },
  render: (args) => <ControlledTextField {...args} />,
};

// –°–æ—Å—Ç–æ—è–Ω–∏—è
export const WithHelperText: Story = {
  args: {
    label: '–ü–æ–ª–µ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
    helperText: '–≠—Ç–æ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç',
  },
  render: (args: JSX.IntrinsicAttributes) => <ControlledTextField {...args} />,
};

export const WithError: Story = {
  args: {
    label: '–ü–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
    error: true,
    errorText: '–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è',
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Required: Story = {
  args: {
    label: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
    required: true,
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Disabled: Story = {
  args: {
    label: '–û—Ç–∫–ª—é—á–µ–Ω–Ω–æ–µ –ø–æ–ª–µ',
    placeholder: '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞',
    disabled: true,
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const FullWidth: Story = {
  args: {
    label: '–ü–æ–ª–µ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
    fullWidth: true,
  },
  render: (args) => <ControlledTextField {...args} />,
  parameters: {
    layout: 'padded',
  },
};

// –¢–∏–ø—ã –ø–æ–ª–µ–π
export const Password: Story = {
  args: {
    label: '–ü–∞—Ä–æ–ª—å',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å',
    type: 'password',
  },
  render: (args) => <ControlledTextField {...args} />,
};

export const Email: Story = {
  args: {
    label: 'Email',
    placeholder: 'example@example.com',
    type: 'email',
  },
  render: (args) => <ControlledTextField {...args} />,
};

// –ü–æ–ª–µ —Å –∏–∫–æ–Ω–∫–∞–º–∏
export const WithIcons: Story = {
  args: {
    label: '–ü–æ–ª–µ —Å –∏–∫–æ–Ω–∫–∞–º–∏',
    placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç',
    startIcon: <span>üîç</span>,
    endIcon: <span>‚ùå</span>,
  },
  render: (args) => <ControlledTextField {...args} />,
  parameters: {
    docs: {
      description: {
        story:
          '–ü–æ–ª–µ —Å –∏–∫–æ–Ω–∫–∞–º–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ. –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∫–æ–Ω–æ–∫.',
      },
    },
  },
};

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞
export const WithCharacterLimit: Story = {
  args: {
    label: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–º–∞–∫—Å. 100 —Å–∏–º–≤–æ–ª–æ–≤)',
    maxLength: 100,
    placeholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...',
    helperText: '–í–≤–µ–¥–∏—Ç–µ –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤',
  },
};
