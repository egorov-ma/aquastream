spring:
  config:
    import: classpath:db-common.yml
  application:
    name: user-service
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: public
  kafka:
    consumer:
      group-id: ${spring.application.name}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      user-registration: user-registration
jwt:
  secret: 9oSu9ugYxpECIJvtQJ3Q0FPT9jEC5hK3X5Pf7MYgfjSUcum3W9
  expiration-ms: 86400000 # 24 часа
eureka:
  instance:
    prefer-ip-address: true
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  metrics:
    tags:
      application: ${spring.application.name}
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    filter: true
  show-actuator: true
logging:
  level:
    org.springframework.security: INFO
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/aquastream_db
  kafka:
    bootstrap-servers: localhost:9092
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8081
---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/aquastream_db
  kafka:
    bootstrap-servers: kafka:9092
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
server:
  port: 8081
