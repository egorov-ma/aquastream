spring:
  config:
    import: classpath:db-common.yml
  application:
    name: event-service
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: event-service-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"
grpc:
  server:
    port: 9090
  reflection:
    enabled: true
grpcui:
  enabled: true
  path: /grpcui/
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when_authorized
      show-components: always
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      service: event-service
      version: 1.0.0
    export:
      prometheus:
        enabled: true
        step: 10s
        descriptions: true
    distribution:
      percentiles-histogram:
        grpc.server.duration.seconds: true
        http.server.requests: true
      slo:
        grpc.server.duration.seconds: 50ms,100ms,200ms,500ms,1s,2s,5s
        http.server.requests: 50ms,100ms,200ms,500ms,1s,2s,5s
logging:
  level:
    org.aquastream.event: DEBUG
    net.devh.boot.grpc: DEBUG
    root: DEBUG
aquastream:
  logging:
    structured:
      enabled: false
    level:
      root: DEBUG
  monitoring:
    grpc:
      enabled: true
      detailed-metrics: true
---
spring:
  config:
    activate:
      on-profile: local
  kafka:
    bootstrap-servers: localhost:9092
server:
  port: 8082
---
spring:
  config:
    activate:
      on-profile: docker
  kafka:
    bootstrap-servers: kafka:9092
server:
  port: 8082
