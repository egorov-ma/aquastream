openapi: 3.0.3
info:
  title: AquaStream User API
  description: Микросервис управления пользователями и аутентификацией
  version: 1.0.0
  contact:
    name: AquaStream Team
servers:
  - url: http://localhost:8101
    description: Development server
  - url: https://api.aquastream.org
    description: Production server

tags:
  - name: Authentication
    description: User authentication and session management
  - name: Profile
    description: User profile management

paths:
  /api/v1/auth/register:
    post:
      tags:
        - Authentication
      summary: Register new user
      description: Create new user account and return authentication tokens
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleSuccessResponse'
        '400':
          description: Invalid request data
        '409':
          description: User already exists

  /api/v1/auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate user
      description: Login with email and password
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleSuccessResponse'
        '401':
          description: Invalid credentials
        '400':
          description: Invalid request data

  /api/v1/auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      description: Invalidate current session
      operationId: logoutUser
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleSuccessResponse'

  /api/v1/auth/revoke-all:
    post:
      tags:
        - Authentication
      summary: Revoke all sessions
      description: Invalidate all user sessions across devices
      operationId: revokeAllSessions
      responses:
        '200':
          description: All sessions revoked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeAllResponse'

  /api/v1/profile:
    get:
      tags:
        - Profile
      summary: Get user profile
      description: Retrieve current user profile information
      operationId: getUserProfile
      responses:
        '200':
          description: Profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized

components:
  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          minLength: 8
          example: SecurePassword123
        firstName:
          type: string
          example: Иван
        lastName:
          type: string
          example: Иванов
        phone:
          type: string
          pattern: '^\+7\d{10}$'
          example: '+79001234567'

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          example: SecurePassword123

    SimpleSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Operation completed successfully

    RevokeAllResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        revokedSessions:
          type: integer
          example: 3
        message:
          type: string
          example: All sessions revoked successfully

    UserProfile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        email:
          type: string
          format: email
          example: user@example.com
        firstName:
          type: string
          example: Иван
        lastName:
          type: string
          example: Иванов
        phone:
          type: string
          example: '+79001234567'
        createdAt:
          type: string
          format: date-time
          example: '2024-01-15T10:30:00Z'
        lastLoginAt:
          type: string
          format: date-time
          example: '2024-01-20T14:45:00Z'

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID

security:
  - cookieAuth: []