services:
  postgres:
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  redis:
    ports:
      - "${REDIS_PORT:-6379}:6379"

  minio:
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"

  backend-gateway:
    build:
      context: ../../..
      dockerfile: backend-infra/docker/images/Dockerfile.gateway
      args:
        JAR_FILE: backend-gateway/build/libs/backend-gateway-*.jar
    ports:
      - "8080:8080"

  backend-user:
    build:
      context: ../../..
      dockerfile: backend-infra/docker/images/Dockerfile.user
      args:
        JAR_FILE: backend-user/backend-user-api/build/libs/backend-user-api-*.jar
    ports:
      - "8101:8101"

  backend-event:
    build:
      context: ../../..
      dockerfile: backend-infra/docker/images/Dockerfile.event
      args:
        JAR_FILE: backend-event/backend-event-api/build/libs/backend-event-api-*.jar
    ports:
      - "8102:8102"

  backend-crew:
    build:
      context: ../../..
      dockerfile: backend-infra/docker/images/Dockerfile.crew
      args:
        JAR_FILE: backend-crew/backend-crew-api/build/libs/backend-crew-api-*.jar
    ports:
      - "8103:8103"

  backend-payment:
    build:
      context: ../../..
      dockerfile: backend-infra/docker/images/Dockerfile.payment
      args:
        JAR_FILE: backend-payment/backend-payment-api/build/libs/backend-payment-api-*.jar
    ports:
      - "8104:8104"

  backend-notification:
    build:
      context: ../../..
      dockerfile: backend-infra/docker/images/Dockerfile.notification
      args:
        JAR_FILE: backend-notification/backend-notification-api/build/libs/backend-notification-api-*.jar
    ports:
      - "8105:8105"

  backend-media:
    build:
      context: ../../..
      dockerfile: backend-infra/docker/images/Dockerfile.media
      args:
        JAR_FILE: backend-media/backend-media-api/build/libs/backend-media-api-*.jar
    ports:
      - "8106:8106"

  prometheus:
    image: prom/prometheus:v2.52.0
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
    volumes:
      - ../compose/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheusdata:/prometheus
    ports:
      - "9090:9090"
    networks: [aquastream-net]

  loki:
    image: grafana/loki:2.9.5
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ../compose/loki-config.yml:/etc/loki/config.yml:ro
      - lokidata:/loki
    ports:
      - "3100:3100"
    networks: [aquastream-net]

  promtail:
    image: grafana/promtail:2.9.5
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ../compose/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - promtailpositions:/tmp/positions
    depends_on:
      - loki
    networks: [aquastream-net]

  grafana:
    image: grafana/grafana:10.4.2
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - grafanadata:/var/lib/grafana
      - ../compose/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
      - loki
    networks: [aquastream-net]
