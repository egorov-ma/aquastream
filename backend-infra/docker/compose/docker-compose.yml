# Имя проекта фиксируем для стабильного имени сети/ресурсов
name: aquastream

networks:
  aquastream-net:
    name: aquastream-net

volumes:
  pgdata:
  redisdata:
  miniodata:
  prometheusdata:
  grafanadata:
  lokidata:
  promtailpositions:

services:
  postgres:
    image: postgres:16-alpine
    container_name: aquastream-postgres
    profiles: [dev, stage, prod]
    env_file:
      - ${ENV_FILE:-.env}
    command: ["postgres", "-c", "max_connections=200"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-schemas.sql:/docker-entrypoint-initdb.d/00-init-schemas.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-aquastream} -d ${POSTGRES_DB:-aquastream}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 768m
    cpus: "0.75"
    networks: [aquastream-net]

  redis:
    image: redis:7-alpine
    container_name: aquastream-redis
    profiles: [dev, stage, prod]
    env_file:
      - ${ENV_FILE:-.env}
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 256m
    cpus: "0.50"
    networks: [aquastream-net]

  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    container_name: aquastream-minio
    profiles: [dev, stage, prod]
    command: ["server", "/data", "--console-address", ":9001"]
    env_file:
      - ${ENV_FILE:-.env}
    volumes:
      - miniodata:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]

  minio-setup:
    image: bitnami/minio-client:2024.9.16-debian-12-r1
    container_name: aquastream-minio-setup
    profiles: [dev, stage, prod]
    depends_on:
      - minio
    env_file:
      - ${ENV_FILE:-.env}
    volumes:
      - ../scripts/minio-bootstrap.sh:/usr/local/bin/minio-bootstrap.sh:ro
    entrypoint: ["/bin/sh"]
    command: ["/usr/local/bin/minio-bootstrap.sh"]
    restart: "no"
    networks: [aquastream-net]

  backend-gateway:
    image: aquastream/backend-gateway:dev
    container_name: aquastream-backend-gateway
    profiles: [dev, stage, prod]
    depends_on:
      - redis
    env_file:
      - ${ENV_FILE:-.env}
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]

  backend-user:
    image: aquastream/backend-user:dev
    container_name: aquastream-backend-user
    profiles: [dev, stage, prod]
    depends_on:
      - postgres
      - redis
    env_file:
      - ${ENV_FILE:-.env}
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8101/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]

  backend-event:
    image: aquastream/backend-event:dev
    container_name: aquastream-backend-event
    profiles: [dev, stage, prod]
    depends_on:
      - postgres
      - redis
    env_file:
      - ${ENV_FILE:-.env}
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8102/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]

  backend-crew:
    image: aquastream/backend-crew:dev
    container_name: aquastream-backend-crew
    profiles: [dev, stage, prod]
    depends_on:
      - postgres
    env_file:
      - ${ENV_FILE:-.env}
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8103/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]

  backend-payment:
    image: aquastream/backend-payment:dev
    container_name: aquastream-backend-payment
    profiles: [dev, stage, prod]
    depends_on:
      - postgres
      - redis
      - minio
    env_file:
      - ${ENV_FILE:-.env}
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8104/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]

  backend-notification:
    image: aquastream/backend-notification:dev
    container_name: aquastream-backend-notification
    profiles: [dev, stage, prod]
    depends_on:
      - redis
    env_file:
      - ${ENV_FILE:-.env}
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8105/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]

  backend-media:
    image: aquastream/backend-media:dev
    container_name: aquastream-backend-media
    profiles: [dev, stage, prod]
    depends_on:
      - minio
    env_file:
      - ${ENV_FILE:-.env}
    user: "1000:1000"
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8106/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    mem_limit: 512m
    cpus: "0.75"
    networks: [aquastream-net]
