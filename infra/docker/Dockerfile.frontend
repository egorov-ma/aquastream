# 1. Используем Node.js для сборки фронтенда
FROM node:20 AS build

WORKDIR /app

# Копируем package.json и package-lock.json, затем устанавливаем зависимости
COPY frontend/package.json frontend/package-lock.json ./
RUN npm install

# Копируем весь код приложения и собираем фронтенд
COPY frontend/ ./
RUN npm run build

# 2. Используем Nginx для раздачи фронтенда
FROM nginx:latest AS runtime

# Удаляем дефолтные конфиги Nginx
RUN rm -rf /etc/nginx/conf.d

# Создаем конфиг Nginx напрямую
RUN echo 'worker_processes auto;\n\
events {\n\
    worker_connections 1024;\n\
}\n\
\n\
http {\n\
    include /etc/nginx/mime.types;\n\
    default_type application/octet-stream;\n\
\n\
    sendfile on;\n\
    keepalive_timeout 65;\n\
    gzip on;\n\
\n\
    server {\n\
        listen 80;\n\
        server_name localhost;\n\
        root /usr/share/nginx/html;\n\
        index index.html;\n\
\n\
        location / {\n\
            try_files $uri $uri/ /index.html;\n\
        }\n\
\n\
        location /api/ {\n\
            proxy_pass http://api-gateway:8080/;\n\
            proxy_set_header Host $host;\n\
            proxy_set_header X-Real-IP $remote_addr;\n\
        }\n\
    }\n\
}' > /etc/nginx/nginx.conf

# Копируем собранный фронтенд в Nginx
COPY --from=build /app/build /usr/share/nginx/html

# Открываем порт
EXPOSE 80

# Запускаем Nginx
CMD ["nginx", "-g", "daemon off;"]