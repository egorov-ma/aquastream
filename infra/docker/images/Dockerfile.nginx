# Global ARGs for multi-stage build
ARG NGINX_TAG=1.25.4-alpine

# --- Stage 1: configuration setup ----------------
FROM nginx:${NGINX_TAG} AS config-setup

# Установка необходимых пакетов
RUN apk add --no-cache \
    apache2-utils=2.4.62-r1 \
    openssl=3.1.8-r0 \
    curl=8.11.1-r0 \
    && rm -rf /var/cache/apk/*

# Создание SSL сертификатов
RUN mkdir -p /etc/nginx/ssl && \
    openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048 && \
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/nginx/ssl/key.pem \
    -out /etc/nginx/ssl/cert.pem \
    -subj "/C=RU/ST=Moscow/L=Moscow/O=AquaStream/OU=IT/CN=localhost"

# Создание пользователя для basic auth (monitoring)
RUN htpasswd -bc /etc/nginx/.htpasswd admin monitoring123

# Копирование конфигурации Nginx
COPY infra/monitoring/nginx/nginx.conf /etc/nginx/nginx.conf

# Создание директорий для логов
RUN mkdir -p /var/log/nginx && \
    touch /var/log/nginx/access.log && \
    touch /var/log/nginx/error.log

# Настройка безопасности
RUN chown -R nginx:nginx /var/log/nginx /etc/nginx/ssl && \
    chmod 600 /etc/nginx/ssl/key.pem && \
    chmod 644 /etc/nginx/ssl/cert.pem /etc/nginx/ssl/dhparam.pem

# Проверка синтаксиса конфигурации (upstreams будут проверены при запуске)
RUN nginx -T 2>/dev/null || echo "Конфигурация будет проверена при запуске"

# Expose ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# --- Stage 2: runtime -----------------------------
FROM nginx:${NGINX_TAG} AS runtime

# Копируем настроенные файлы из предыдущего этапа
COPY --from=config-setup /etc/nginx /etc/nginx
COPY --from=config-setup /var/log/nginx /var/log/nginx

# Expose ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]