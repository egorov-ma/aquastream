# Global ARGs for multi-stage build
ARG ECLIPSE_TEMURIN_JDK_TAG=21-jdk
ARG ECLIPSE_TEMURIN_JRE_TAG=21-jre
ARG SERVICE

# --- Stage 1: build jar ----------------------------
FROM eclipse-temurin:${ECLIPSE_TEMURIN_JDK_TAG} AS build
WORKDIR /workspace

# Copy Gradle wrapper and settings
COPY gradlew settings.gradle build.gradle version.properties /workspace/
COPY gradle /workspace/gradle

# Copy common module and selected service
COPY common /workspace/common
COPY $SERVICE /workspace/$SERVICE

# Build jar for selected service
RUN bash -c "./gradlew :${SERVICE//\//:}:bootJar --no-daemon --build-cache \
    && cp \$(find $SERVICE/build/libs -maxdepth 1 -type f -name '*.jar' ! -name '*-plain.jar' | head -n1) app.jar"

# --- Stage 2: runtime -----------------------------
FROM eclipse-temurin:${ECLIPSE_TEMURIN_JRE_TAG} AS runtime
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy jar from build stage
COPY --from=build /workspace/app.jar app.jar
RUN chown appuser:appuser app.jar

USER appuser
EXPOSE 8080
ENTRYPOINT ["java", "-XX:+UseContainerSupport", "-XX:MaxRAMPercentage=75.0", "-XX:+ExitOnOutOfMemoryError", "-Djava.security.egd=file:/dev/./urandom", "-Dspring.profiles.active=docker", "-jar", "/app/app.jar"]
