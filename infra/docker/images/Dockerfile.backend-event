# Global ARGs for multi-stage build
ARG ECLIPSE_TEMURIN_JDK_TAG=21-jdk
ARG ECLIPSE_TEMURIN_JRE_TAG=21-jre

# --- Stage 1: build jar ----------------------------
FROM eclipse-temurin:${ECLIPSE_TEMURIN_JDK_TAG} AS build

WORKDIR /workspace

# Копируем Gradle wrapper и настройки
COPY gradlew settings.gradle build.gradle version.properties /workspace/
COPY gradle /workspace/gradle

# Копируем только backend-event модули и common (для более быстрого кеша)
COPY common /workspace/common
COPY backend-event /workspace/backend-event

# Скачиваем зависимости и собираем jar
RUN ./gradlew :backend-event:backend-event-service:bootJar --no-daemon

# --- Stage 2: runtime -----------------------------
FROM eclipse-temurin:${ECLIPSE_TEMURIN_JRE_TAG} AS runtime

WORKDIR /app

# Устанавливаем curl для health check
RUN apk add --no-cache curl=8.12.1-r1

# Создаем пользователя для безопасности
RUN addgroup -S appuser && adduser -S appuser -G appuser

# Копируем собранный jar
COPY --from=build /workspace/backend-event/backend-event-service/build/libs/backend-event-service-*.jar app.jar

# Настройка безопасности
RUN chown appuser:appuser app.jar

# Переключаемся на непривилегированного пользователя
USER appuser

EXPOSE 8082

# Добавляем JVM параметры для безопасности и производительности
ENTRYPOINT ["java", \
    "-XX:+UseContainerSupport", \
    "-XX:MaxRAMPercentage=75.0", \
    "-XX:+ExitOnOutOfMemoryError", \
    "-Djava.security.egd=file:/dev/./urandom", \
    "-Dspring.profiles.active=docker", \
    "-jar", "/app/app.jar"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8082/actuator/health || exit 1 