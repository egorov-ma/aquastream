#!/bin/bash
set -euo pipefail

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª–∏—Ç–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –∏–Ω–¥–µ–∫—Å–æ–≤ (ILM)
# –≤ Elasticsearch –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "${SCRIPT_DIR}/../.." && pwd)"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
NC="\033[0m"; GREEN="\033[0;32m"; YELLOW="\033[0;33m"; RED="\033[0;31m"

log() {
    local level="$1"; shift
    local msg="$*"
    local color="$GREEN"
    case "$level" in
      INFO)  color="$GREEN";;
      WARN)  color="$YELLOW";;
      ERROR) color="$RED";;
    esac
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] ${color}${level}${NC} ${msg}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Elasticsearch –¥–æ—Å—Ç—É–ø–µ–Ω
check_elasticsearch() {
    local max_attempts=30
    local attempt=1
    
    log INFO "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Elasticsearch..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s -k --cacert "${PROJECT_ROOT}/infra/monitoring/elasticsearch/certs/ca/ca.crt" \
                -u "elastic:${ELASTIC_PASSWORD}" \
                "https://localhost:9200/_cluster/health" | grep -q '"status"'; then
            log INFO "Elasticsearch –¥–æ—Å—Ç—É–ø–µ–Ω"
            return 0
        fi
        
        log WARN "Elasticsearch –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts), –æ–∂–∏–¥–∞–Ω–∏–µ 5s..."
        sleep 5
        attempt=$((attempt + 1))
    done
    
    log ERROR "Elasticsearch –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫!"
    return 1
}

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª–∏—Ç–∏–∫—É ILM
apply_ilm_policy() {
    local policy_name="$1"
    local policy_json="$2"
    
    log INFO "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ ILM: $policy_name"
    
    local response
    response=$(curl -s -k --cacert "${PROJECT_ROOT}/infra/monitoring/elasticsearch/certs/ca/ca.crt" \
                -u "elastic:${ELASTIC_PASSWORD}" \
                -X PUT "https://localhost:9200/_ilm/policy/$policy_name" \
                -H "Content-Type: application/json" \
                -d "$policy_json")
    
    if echo "$response" | grep -q '"acknowledged":true'; then
        log INFO "‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∞ $policy_name —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞"
    else
        log ERROR "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏ $policy_name: $response"
        return 1
    fi
}

# –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å—ã –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤
create_index_alias() {
    local alias_name="$1"
    local index_pattern="$2"
    
    log INFO "–°–æ–∑–¥–∞–Ω–∏–µ –∞–ª–∏–∞—Å–∞ $alias_name –¥–ª—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ $index_pattern"
    
    local response
    response=$(curl -s -k --cacert "${PROJECT_ROOT}/infra/monitoring/elasticsearch/certs/ca/ca.crt" \
                -u "elastic:${ELASTIC_PASSWORD}" \
                -X PUT "https://localhost:9200/${index_pattern}-000001" \
                -H "Content-Type: application/json" \
                -d "{
                  \"settings\": {
                    \"number_of_shards\": 1,
                    \"number_of_replicas\": 0,
                    \"index.lifecycle.name\": \"${alias_name}-policy\",
                    \"index.lifecycle.rollover_alias\": \"${alias_name}\"
                  },
                  \"aliases\": {
                    \"${alias_name}\": {
                      \"is_write_index\": true
                    }
                  }
                }")
    
    if echo "$response" | grep -q '"acknowledged":true'; then
        log INFO "‚úÖ –ê–ª–∏–∞—Å $alias_name —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"
    else
        log WARN "‚ö†Ô∏è  –ê–ª–∏–∞—Å $alias_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: $response"
    fi
}

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f "${PROJECT_ROOT}/infra/docker/compose/.env" ]; then
    source "${PROJECT_ROOT}/infra/docker/compose/.env"
else
    log ERROR "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ${PROJECT_ROOT}/infra/docker/compose/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞–Ω –ø–∞—Ä–æ–ª—å Elasticsearch
if [ -z "${ELASTIC_PASSWORD:-}" ]; then
    log ERROR "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ELASTIC_PASSWORD –Ω–µ –∑–∞–¥–∞–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Elasticsearch
check_elasticsearch

log INFO "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–∏—Ç–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –∏–Ω–¥–µ–∫—Å–æ–≤..."

# –ß–∏—Ç–∞–µ–º –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –∏–∑ JSON —Ñ–∞–π–ª–∞
POLICIES_FILE="${PROJECT_ROOT}/infra/monitoring/elasticsearch/ilm-policies.json"

if [ ! -f "$POLICIES_FILE" ]; then
    log ERROR "–§–∞–π–ª —Å –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $POLICIES_FILE"
    exit 1
fi

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ª–æ–≥–æ–≤
LOG_POLICY=$(jq -r '.["aquastream-log-policy"]' "$POLICIES_FILE")
apply_ilm_policy "aquastream-log-policy" "$LOG_POLICY"

# –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –¥–ª—è –ª–æ–≥–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
SECURITY_POLICY=$(jq -r '.["aquastream-security-policy"]' "$POLICIES_FILE")
apply_ilm_policy "aquastream-security-policy" "$SECURITY_POLICY"

# –°–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å—ã –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤
create_index_alias "aquastream-logs" "aquastream-logs"
create_index_alias "aquastream-security" "aquastream-security"

log INFO "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
log INFO ""
log INFO "üìä –ü–æ–ª–∏—Ç–∏–∫–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è:"
log INFO "  ‚Ä¢ –û–±—ã—á–Ω—ã–µ –ª–æ–≥–∏: 90 –¥–Ω–µ–π (hot 7d ‚Üí warm 30d ‚Üí cold 90d ‚Üí delete)"
log INFO "  ‚Ä¢ –õ–æ–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: 365 –¥–Ω–µ–π (hot 30d ‚Üí warm 90d ‚Üí cold 365d ‚Üí delete)"
log INFO ""
log INFO "üîç –î–æ—Å—Ç—É–ø –∫ –ª–æ–≥–∞–º:"
log INFO "  ‚Ä¢ Kibana: https://localhost/monitoring/kibana/"
log INFO "  ‚Ä¢ –ò–Ω–¥–µ–∫—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: aquastream-logs-*"
log INFO "  ‚Ä¢ –ò–Ω–¥–µ–∫—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: aquastream-security-*"