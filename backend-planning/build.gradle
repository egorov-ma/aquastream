plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'org.aquastream'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    // Добавлен репозиторий JitPack для получения зависимости gRPC UI:
    maven { url = uri('https://jitpack.io') }
}

dependencies {
    // Spring Boot и общие зависимости
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation project(':common')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // Рекомендуемая зависимость для валидации данных
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // gRPC зависимости
    implementation 'io.grpc:grpc-netty-shaded:1.61.0'
    implementation 'io.grpc:grpc-protobuf:1.61.0'
    implementation 'io.grpc:grpc-stub:1.61.0'
    // Стабильный gRPC Spring Boot стартер из Maven Central:
    implementation 'net.devh:grpc-server-spring-boot-starter:2.15.0.RELEASE'
    // Добавленная зависимость для gRPC Reflection (проверенный подход)
    implementation 'io.grpc:grpc-services:1.61.0'
    
    // Дополнительная зависимость для аннотаций (если требуется)
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.61.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        ofSourceSet('main')
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

// Очистка сгенерированных файлов
clean {
    delete 'build/generated/source/proto'
}

tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}